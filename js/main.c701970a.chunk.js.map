{"version":3,"sources":["utils/index.js","index.js"],"names":["formatErrorMsg","err","msg","response","data","message","errors","map","e","join","includes","filterDate","_date","date","Date","now","formattedDate","formatDistance","addSuffix","locale","zhCN","formatRelative","format","filterIssues","issues","_ref","createdAt","bodyHTML","number","id","comments","totalCount","labels","gId","label","length","name","color","filterLabels","nodes","filterComment","comment","databaseId","user","avatar","author","avatarUrl","login","bodyHtml","body","reactions","filterComments","getColorByBgColor","hexcolor","parseInt","substr","queryParse","search","arguments","undefined","window","location","queryString","substring","query","split","forEach","queryStr","key","value","decodeURIComponent","queryStringify","Object","keys","encodeURIComponent","getIssueUrl","repo","owner","WEIBO","getCommentUrl","auth","code"],"mappings":"+FAAA,wXAGO,MAAMA,EAAiBC,IAC5B,IAAIC,EAAM,6BAOV,OANID,EAAIE,UAAYF,EAAIE,SAASC,MAAQH,EAAIE,SAASC,KAAKC,SACzDH,GAAUD,EAAIE,SAASC,KAAKC,QAArB,KACPJ,EAAIE,SAASC,KAAKE,SAAWJ,GAAOD,EAAIE,SAASC,KAAKE,OAAOC,IAAIC,GAAKA,EAAEH,SAASI,KAAK,QAEtFP,GAAOD,EAAII,QAETH,EAAIQ,SAAS,YAAcR,EAAIQ,SAAS,WACnC,wFAGLR,EAAIQ,SAAS,uBACR,gHAGFR,GAGIS,EAAaC,IACxB,MAAMC,EAAO,IAAIC,KAAKF,GAChBG,EAAM,IAAID,KACVE,EAAgBC,YAAeJ,EAAME,EAAK,CAAEG,WAAW,EAAMC,OAAQC,MAE3E,OAAIJ,EAAcN,SAAS,WAAQM,EAAcN,SAAS,gBACjDM,EAGLA,EAAcN,SAAS,iBAASM,EAAcN,SAAS,gBAClDW,YAAeR,EAAME,EAAK,CAAEI,OAAQC,MAGzCJ,EAAcN,SAAS,UAClBM,EAGFM,YAAOT,EAAM,aAAc,CAAEM,OAAQC,OAYjCG,EAAeC,GACnBA,EAAOjB,IAAIkB,IAAsF,IAArF,UAAEC,EAAS,SAAEC,EAAQ,OAAEC,EAAM,GAAEC,EAAIC,UAAYC,WAAYD,GAAU,OAAEE,GAAQP,EAEhG,MAAO,CAAEC,YAAWC,WAAUC,SAAQK,IAAKJ,EAAIC,WAAUI,MAZjCF,IACrBA,EAAOG,OAGL,CACLC,KAAMJ,EAAO,GAAGI,KAAMC,MAAOL,EAAO,GAAGK,OAHhC,CAAED,KAAM,2BAAQC,MAAO,OAShBC,CAAaN,EAAOO,UAKzBC,EAAgBC,IACpB,CACLZ,GAAIY,EAAQC,WACZT,IAAKQ,EAAQZ,GACbc,KAAM,CACJC,OAAQH,EAAQI,OAAOC,UACvBC,MAAON,EAAQI,OAAOE,OAExBrB,UAAWe,EAAQf,UACnBsB,SAAUP,EAAQd,SAClBsB,KAAMR,EAAQQ,KACdC,UAAWT,EAAQS,YAGVC,EAAiBrB,GACrBA,EAASvB,IAAIkC,GAAWD,EAAcC,IAGlCW,EAAoBC,IAIf,IAHRC,SAASD,EAASE,OAAO,EAAG,GAAI,IAGZ,IAFpBD,SAASD,EAASE,OAAO,EAAG,GAAI,IAEA,IADhCD,SAASD,EAASE,OAAO,EAAG,GAAI,KACQ,KACjC,IAAO,QAAU,QAGrBC,EAAa,WAAsC,IAArCC,EAAMC,UAAAvB,OAAA,QAAAwB,IAAAD,UAAA,GAAAA,UAAA,GAAGE,OAAOC,SAASJ,OAClD,IAAKA,EAAQ,MAAO,GACpB,MAAMK,EAA4B,MAAdL,EAAO,GAAaA,EAAOM,UAAU,GAAKN,EACxDO,EAAQ,GASd,OARAF,EACGG,MAAM,KACNC,QAAQC,IACP,MAAOC,EAAKC,GAASF,EAASF,MAAM,KAEhCG,IAAKJ,EAAMM,mBAAmBF,IAAQE,mBAAmBD,MAG1DL,GAGIO,EAAiBP,GACRQ,OAAOC,KAAKT,GAC7BzD,IAAI6D,GAAO,GAAGA,KAAOM,mBAAmBV,EAAMI,IAAQ,OACtD3D,KAAK,KAIGkE,EAAc/C,IACzB,MAAM,KAAEgD,EAAI,MAAEC,GAAUjB,OAAOkB,MAC/B,MAAO,sBAAsBD,KAASD,YAAehD,KAG1CmD,EAAgBnD,IAC3B,MAAM,KAAEgD,EAAI,MAAEC,GAAUjB,OAAOkB,MAC/B,MAAO,gCAAgCD,KAASD,YAAehD,e,oECjHjE,mBAGAgC,OAAOoB,KAAOxB,cAEVI,OAAOoB,MAAQpB,OAAOoB,KAAKC,KAC7B,mDAEA,4D","file":"static/js/main.c701970a.chunk.js","sourcesContent":["import { format, formatDistance, formatRelative } from 'date-fns'\r\nimport { zhCN } from 'date-fns/locale'\r\n\r\nexport const formatErrorMsg = err => {\r\n  let msg = '出错信息: '\r\n  if (err.response && err.response.data && err.response.data.message) {\r\n    msg += `${err.response.data.message}. `\r\n    err.response.data.errors && (msg += err.response.data.errors.map(e => e.message).join(', '))\r\n  } else {\r\n    msg += err.message\r\n  }\r\n  if (msg.includes('Network') || msg.includes('timeout')) {\r\n    return '加载失败，阅读微博需要翻墙哦~'\r\n  }\r\n\r\n  if (msg.includes('rate limit exceeded')) {\r\n    return '微博接口已被请求爆了，请过一会再来吧~'\r\n  }\r\n\r\n  return msg\r\n}\r\n\r\nexport const filterDate = _date => {\r\n  const date = new Date(_date)\r\n  const now = new Date()\r\n  const formattedDate = formatDistance(date, now, { addSuffix: true, locale: zhCN })\r\n\r\n  if (formattedDate.includes('秒') || formattedDate.includes('分钟')) {\r\n    return formattedDate\r\n  }\r\n\r\n  if (formattedDate.includes('小时') || formattedDate.includes('昨天')) {\r\n    return formatRelative(date, now, { locale: zhCN })\r\n  }\r\n\r\n  if (formattedDate.includes('天')) {\r\n    return formattedDate\r\n  }\r\n\r\n  return format(date, 'yyyy-MM-dd', { locale: zhCN })\r\n}\r\n\r\nexport const filterLabels = labels => {\r\n  if (!labels.length) {\r\n    return { name: '🎨其他', color: '999' }\r\n  }\r\n  return {\r\n    name: labels[0].name, color: labels[0].color\r\n  }\r\n}\r\n\r\nexport const filterIssues = issues => {\r\n  return issues.map(({ createdAt, bodyHTML, number, id, comments: { totalCount: comments }, labels }) => {\r\n    const label = filterLabels(labels.nodes)\r\n    return { createdAt, bodyHTML, number, gId: id, comments, label }\r\n  })\r\n}\r\n\r\nexport const filterComment = comment => {\r\n  return {\r\n    id: comment.databaseId,\r\n    gId: comment.id,\r\n    user: {\r\n      avatar: comment.author.avatarUrl,\r\n      login: comment.author.login\r\n    },\r\n    createdAt: comment.createdAt,\r\n    bodyHtml: comment.bodyHTML,\r\n    body: comment.body,\r\n    reactions: comment.reactions\r\n  }\r\n}\r\nexport const filterComments = comments => {\r\n  return comments.map(comment => filterComment(comment))\r\n}\r\n\r\nexport const getColorByBgColor = hexcolor => {\r\n  let r = parseInt(hexcolor.substr(0, 2), 16)\r\n  let g = parseInt(hexcolor.substr(2, 2), 16)\r\n  let b = parseInt(hexcolor.substr(4, 2), 16)\r\n  let yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000\r\n  return (yiq >= 128) ? 'black' : 'white'\r\n}\r\n\r\nexport const queryParse = (search = window.location.search) => {\r\n  if (!search) return {}\r\n  const queryString = search[0] === '?' ? search.substring(1) : search\r\n  const query = {}\r\n  queryString\r\n    .split('&')\r\n    .forEach(queryStr => {\r\n      const [key, value] = queryStr.split('=')\r\n      /* istanbul ignore else */\r\n      if (key) query[decodeURIComponent(key)] = decodeURIComponent(value)\r\n    })\r\n\r\n  return query\r\n}\r\n\r\nexport const queryStringify = query => {\r\n  const queryString = Object.keys(query)\r\n    .map(key => `${key}=${encodeURIComponent(query[key] || '')}`)\r\n    .join('&')\r\n  return queryString\r\n}\r\n\r\nexport const getIssueUrl = number => {\r\n  const { repo, owner } = window.WEIBO\r\n  return `https://github.com/${owner}/${repo}/issues/${number}`\r\n}\r\n\r\nexport const getCommentUrl = number => {\r\n  const { repo, owner } = window.WEIBO\r\n  return `https://api.github.com/repos/${owner}/${repo}/issues/${number}/comments`\r\n}","/* eslint-disable no-unused-expressions */\nimport { queryParse } from './utils'\n\nwindow.auth = queryParse()\n\nif (window.auth && window.auth.code) {\n  import('./auth')\n} else {\n  import('./main')\n}\n"],"sourceRoot":""}